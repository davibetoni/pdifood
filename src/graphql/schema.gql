scalar Datetime
scalar Json

# ------ Inputs ---------
input RestaurantInput {
  name: String!
  cnpj: String!
}

input ProductInput {
  restaurantId: String!
  name: String!
  price: Float!
  ingredients: Json
  imageUrl: String
}

input OrderInput {
  id: String!
  finishedAt: String
}
# -------------------------

# ------- Querys ---------
input OrderQuery {
  finishedAt: Datetime
}

input ProductQuery {
  name: String
  price: Float
  restaurantId: String
  order: OrderProduct
}

enum OrderProduct {
  moreThan
  lessThan
  asc
  desc
}
# -------------------------

# ------- Types ---------
type Product {
  id: String
  restaurantId: String
  name: String
  price: Float
  ingredients: Json
  imageUrl: String
  createdAt: Datetime
  updatedAt: Datetime
}

type Restaurant {
  id: String
  name: String
  cnpj: String
  products: [Product]
  createdAt: Datetime
  updatedAt: Datetime
}

type Order {
  id: String
  userId: String
  finishedBy: String
  createdAt: Datetime
  updatedAt: Datetime
  finishedAt: Datetime
}
# -------------------------

type Mutation {
  createRestaurant(content: RestaurantInput!): Restaurant
  createProduct(content: ProductInput!): Product
  createOrder: Order
  finishOrder(content: OrderInput!): Order
}

type Query {
  restaurants(id: String, query: String): [Restaurant]!
  products(id: String, query: ProductQuery): [Product]!
  orders(id: String, query: OrderQuery): [Order]!
}
